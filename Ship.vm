function Ship.new 0
    push constant 4
    call Memory.alloc 1
    pop pointer 0
    push argument 0
    pop this 0
    push argument 1
    pop this 1
    push constant 0
    pop this 3
    push pointer 0
    return
function Ship.move 0
    push argument 0
    pop pointer 0
    push argument 1
    push constant 97
    eq
    push this 0
    push constant 40
    sub
    push constant 20
    gt
    and
    not
    if-goto Ship_1
    push this 0
    push constant 20
    sub
    pop this 0
    push constant 0
    return
    goto Ship_0
label Ship_1
label Ship_0
    push argument 1
    push constant 100
    eq
    push this 0
    push constant 40
    add
    push constant 460
    lt
    and
    not
    if-goto Ship_3
    push this 0
    push constant 20
    add
    pop this 0
    goto Ship_2
label Ship_3
label Ship_2
    push constant 0
    return
function Ship.draw 1
    push argument 0
    pop pointer 0
    push constant 16384
    push this 1
    push constant 32
    call Math.multiply 2
    add
    push this 0
    push constant 16
    call Math.divide 2
    add
    pop local 0
    push local 0
    push constant 64
    add
    push constant 48
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 96
    add
    push constant 120
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 128
    add
    push constant 120
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 160
    add
    push constant 510
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 192
    add
    push constant 120
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 224
    add
    push constant 120
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 256
    add
    push constant 1023
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 288
    add
    push constant 252
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 320
    add
    push constant 1023
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 352
    add
    push constant 1023
    call Memory.poke 2
    pop temp 0
    push constant 0
    return
function Ship.erase 1
    push argument 0
    pop pointer 0
    push constant 16384
    push this 1
    push constant 32
    call Math.multiply 2
    add
    push this 0
    push constant 16
    call Math.divide 2
    add
    pop local 0
    push local 0
    push constant 64
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 96
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 128
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 160
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 192
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 224
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 256
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 288
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 320
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 352
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push constant 0
    return
function Ship.getX 0
    push argument 0
    pop pointer 0
    push this 0
    return
function Ship.getY 0
    push argument 0
    pop pointer 0
    push this 1
    return
function Ship.getBulletX 1
    push argument 0
    pop pointer 0
    push this 2
    call Shot.getX 1
    pop local 0
    push local 0
    return
function Ship.getBulletY 1
    push argument 0
    pop pointer 0
    push this 2
    call Shot.getY 1
    pop local 0
    push local 0
    return
function Ship.createBullet 1
    push argument 0
    pop pointer 0
    push argument 1
    push constant 32
    eq
    not
    if-goto Ship_5
    push constant 10
    push constant 2
    call Math.divide 2
    pop local 0
    push this 0
    push local 0
    add
    push this 1
    call Shot.new 2
    pop this 2
    push constant 1
    neg
    pop this 3
    goto Ship_4
label Ship_5
label Ship_4
    push constant 0
    return
function Ship.drawBullet 0
    push argument 0
    pop pointer 0
    push this 3
    not
    if-goto Ship_7
    push pointer 0
    call Ship.checkBullet 1
    pop temp 0
    push this 2
    call Shot.moveUp 1
    pop temp 0
    push this 2
    call Shot.draw 1
    pop temp 0
    goto Ship_6
label Ship_7
label Ship_6
    push constant 0
    return
function Ship.checkBullet 0
    push argument 0
    pop pointer 0
    push this 2
    call Shot.getY 1
    push constant 0
    eq
    not
    if-goto Ship_9
    push constant 0
    pop this 3
    push this 2
    call Shot.dispose 1
    pop temp 0
    goto Ship_8
label Ship_9
label Ship_8
    push constant 0
    return
function Ship.shotHit 0
    push argument 0
    pop pointer 0
    push constant 0
    pop this 3
    push this 2
    call Shot.dispose 1
    pop temp 0
    push constant 0
    return
function Ship.getFlagBullet 0
    push argument 0
    pop pointer 0
    push this 3
    return