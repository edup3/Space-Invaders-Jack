class Ship {
    field int x,y;
    
    constructor Ship new(int ax, int ay){
        let x = ax;
        let y = ay;

        return this;
    }

    method void move(char key) {
    
        if ((key = 97 & ((x - 40) > 20))) {
            let x = x - 20;
            return;
        }
        if ((key = 100 & ((x + 40) < 460))) { 
            let x = x + 20;
        }
        
        return;
    }

    method void draw(){
        var int memAddress; 
        let memAddress = 16384+ (y*32) + (x/16);
        // column 0
        do Memory.poke(memAddress +64, 48);
        do Memory.poke(memAddress +96, 120);
        do Memory.poke(memAddress +128, 120);
        do Memory.poke(memAddress +160, 510);
        do Memory.poke(memAddress +192, 120);
        do Memory.poke(memAddress +224, 120);
        do Memory.poke(memAddress +256, 1023);
        do Memory.poke(memAddress +288, 252);
        do Memory.poke(memAddress +320, 1023);
        do Memory.poke(memAddress +352, 1023);

        return;
    }

    method void erase(){
        var int memAddress; 
        let memAddress = 16384+ (y*32) + (x/16);
        // column 0
        do Memory.poke(memAddress +64, 0);
        do Memory.poke(memAddress +96, 0);
        do Memory.poke(memAddress +128, 0);
        do Memory.poke(memAddress +160, 0);
        do Memory.poke(memAddress +192, 0);
        do Memory.poke(memAddress +224, 0);
        do Memory.poke(memAddress +256, 0);
        do Memory.poke(memAddress +288, 0);
        do Memory.poke(memAddress +320, 0);
        do Memory.poke(memAddress +352, 0);

        return;
    }

}
